#!/usr/bin/env bash

pull_image() {
    SOURCE_IMAGE="$CONTAINER_URL"

    installed_image="$(podman inspect --format '{{.Digest}}' "$SOURCE_IMAGE")"
    remote_image="$(skopeo inspect --format '{{.Digest}}' "docker://$SOURCE_IMAGE")"

    if [[ "$installed_image" == "$remote_image" ]]; then
        printf "Latest image already pulled.\n"
        exit 0
    else
        podman pull "$SOURCE_IMAGE"
    fi
}

update_store() {
    lock_image_storage u

    if [[ ! -d /.mat/.store/deep ]]; then
        lock_root_dir u
        mkdir -p /.mat/.store/deep
        lock_root_dir l
    fi

    SOURCE_IMAGE="$1"
    deployment="$2"

    podman create --replace --name mat-tmp "$SOURCE_IMAGE"
    CMOUNT="$(podman mount mat-tmp)"

    cp -fa "$CMOUNT/files" "/.mat/.$deployment"

    install_path() {
        if [[ ! -f "/.mat/.store/deep/${path%% *}" ]]; then
            cp -a "$CMOUNT${1##* }" "/.mat/.store/deep/${1%% *}" 2>/dev/null || :
        fi
    }

    export -f install_path
    export CMOUNT

    cat "/.mat/.$deployment" | xargs -0 -n1 -P"$(("$(nproc --all)"**2))" \
        bash -c 'install_path "$@"' _

    unset -f install_path
    unset CMOUNT

    podman unmount mat-tmp
    podman rm mat-tmp

    lock_image_storage l
}
