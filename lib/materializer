#!/usr/bin/env bash
set -oue pipefail

generate_deployment() {
    deployment="$1"

    install_package() {
        printf "Installing package $1...\n"
        rsync -aHlx --link-dest="../.store/$1-$2" ".store/$1-$2/" \
            "staging/" 2>/dev/null || :
    }

    export -f install_package

    cat pkgs | grep -v "^filesystem" | xargs -n2 -P"$(("$(nproc --all)"**2))" \
        bash -c 'install_package "$@"' _

    unset -f install_package

    mkdir -p "staging/usr/local"
    cp -rfa "/etc" "staging" || :
    rm "staging/etc/resolv.conf"
    ln -sf "/run/systemd/resolve/stub-resolv.conf" "staging/etc/resolv.conf" || :

    echo "$deployment" > "staging/usr/.dep"
}

relabel_deployment() {
    printf "Relabeling staging tree for SELinux...\nThis might take a minute...\n"
    setfiles -r "staging" "staging/etc/selinux/targeted/contexts/files/file_contexts" "staging" &>/dev/null
}

relabel_store() {
    deployment="$1"

    read -ra pkg_list <<< "$(cat /.mat/.pkgs"$deployment" | tr "\n" " ")"
    selinux_policy="$(cat /.mat/.pkgs"$deployment" | grep "selinux-policy-targeted*" | tail -n1)"

    printf "Relabeling deployment %s packages...\n" "$deployment"

    for package in "${pkg_list[@]}"; do
        printf "Relabeling %s...\n" "$package"
        setfiles -r "/.mat/.store/$package" "/.mat/.store/$selinux_policy/etc/selinux/targeted/contexts/files/file_contexts" "/.mat/.store/$package" &>/dev/null || :
    done
}
