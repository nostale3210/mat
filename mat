#!/usr/bin/env bash
set -oue pipefail

for func in /usr/lib/mat/*; do
    if [[ -f "$func" ]]; then
        source "$func"
    fi
done

PREFIX=""
CONTAINER_URL="localhost/mat"

if [[ "$@" == *"--init"* ]]; then PREFIX="${@: -1}"; fi

if systemd-inhibit --version &>/dev/null && \
    ! systemd-inhibit --list | grep -q "mat-rootful-ops" && \
    [[ "$(id -u)" == "0" ]]; then
    set -e
    systemd-inhibit --what="idle:sleep:shutdown" --who="mat-rootful-ops" --why="Doing important stuff" \
        mat "$@"
    exit 0
fi

if [[ "$(id -u)" == "0" ]]; then
    [[ ! -f "$PREFIX/etc/.mat.lock" ]] && \
        mkdir -p "$PREFIX/etc" && touch "$PREFIX/etc/.mat.lock"

    exec {MAT_LOCK}<>"$PREFIX/etc/.mat.lock" || \
        { printf "Couldn't set lock fd.\n" && exit 1 ; }

    printf "Acquiring lock..."
    flock -x "$MAT_LOCK"
fi

case "$1" in
    unused)
        get_unused_packages 
        ;;
    prune)
        prune_unused_packages
        ;;
    materialize)
        generate_deployment "$2"
        ;;
    relabel)
        relabel_store "$2"
        ;;
    gen_boot)
        booty_bits "$2"
        ;;
    label_boot)
        relabel_boot
        ;;
    pull)
        pull_image "$2"
        ;;
    update)
        update_store "$CONTAINER_URL" "$2"
        ;;
    verify)
        verify_store
        ;;
    itemize)
        populate_store
        create_custom_content_pkg
        ;;
    hash)
        hash_store
        ;;
    exch)
        swap_dep
        ;;
    clear)
        clear_staging
        ;;
    *)
        echo default
        ;;
esac

